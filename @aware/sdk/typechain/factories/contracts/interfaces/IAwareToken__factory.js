"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IAwareToken__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: false,
                internalType: "string",
                name: "_uri",
                type: "string",
            },
        ],
        name: "TokenMetadataURIUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: false,
                internalType: "string",
                name: "_uri",
                type: "string",
            },
        ],
        name: "TokenURIUpdated",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "tokenURI",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "metadataURI",
                        type: "string",
                    },
                    {
                        internalType: "bytes32",
                        name: "contentHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "metadataHash",
                        type: "bytes32",
                    },
                ],
                internalType: "struct IAwareToken.AwareData",
                name: "data",
                type: "tuple",
            },
            {
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "mint",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "ownerOf",
        outputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "tokenMetadataURI",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "metadataURI",
                type: "string",
            },
        ],
        name: "updateTokenMetadataURI",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "tokenURI",
                type: "string",
            },
        ],
        name: "updateTokenURI",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IAwareToken__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IAwareToken__factory = IAwareToken__factory;
IAwareToken__factory.abi = _abi;
//# sourceMappingURL=IAwareToken__factory.js.map